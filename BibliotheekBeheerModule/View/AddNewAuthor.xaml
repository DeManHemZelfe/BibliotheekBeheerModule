<Window x:Class="BibliotheekBeheerModule.View.AddNewAuthor"
        Loaded="WindowLoaded"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BibliotheekBeheerModule.View" 
        xmlns:validationrules="clr-namespace:BibliotheekBeheerModule.ValidationRules"
        mc:Ignorable="d"
        Title="AddNewAuthor" WindowState="Maximized" Height="450" Width="800">
    <Grid Background="#F5F5F5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Background="#0057e7" 
            Height="60"
            Padding="10"
            Margin="0 0 0 20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />

                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Dashboard"
                   Foreground="White" 
                   FontSize="24" 
                   FontWeight="Bold" 
                   VerticalAlignment="Center"/>
                <Button Content="Terug"  Background="#4CAF50" Foreground="White" Grid.ColumnSpan="1"  Width="100" Margin="1750,0,0,0" Click="PrevPage"/>

            </Grid>
        </Border>
        <StackPanel Grid.Row="1" HorizontalAlignment="Center">
            <Border
                BorderThickness="1 1 1 0" 
                CornerRadius="5 5 0 0"
                Padding="5" 
                BorderBrush="#008744" 
                Background="#008744">
                <TextBlock 
                        Text="Add Author"
                        FontSize="20"
                        FontWeight="Bold"
                        Foreground="White"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>
            </Border>
            <Border
                BorderBrush="Gray" 
                BorderThickness="1 0 1 1"
                CornerRadius="0 0 5 5"
                Padding="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock 
                        Text="First name"
                        Grid.Row="1"  
                        Margin="0 10 0 5"
                        VerticalAlignment="Center"/>
                    <TextBox 
                        x:Name="authorFirstname" 
                        Grid.Row="2" 
                        Width="500" 
                        HorizontalAlignment="Left">
                        <TextBox.Text>
                            <Binding Path="AuthorFirstNameInput" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationrules:InputLenghtValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock 
                        Text="Infix "
                        Grid.Row="3"  
                        Margin="0 10 0 5"
                        VerticalAlignment="Center"/>
                    <TextBox 
                        Name="authorInfix" 
                        Grid.Row="4" 
                        Width="500" 
                        HorizontalAlignment="Left"/>

                    <TextBlock 
                        Text="Lastname" 
                        Grid.Row="5" 
                        Margin="0 10 0 5"
                        VerticalAlignment="Center"/>
                    <TextBox 
                        x:Name="authorLastname" 
                        Grid.Row="6"  
                        Width="500" 
                        HorizontalAlignment="Left">
                        <TextBox.Text>
                            <Binding Path="AuthorLastNameInput" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationrules:InputLenghtValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Button
                        Name="AuthorUpdateButton"
                        Content="Add Author" 
                        Background="#008744"
                        Foreground="White"  
                        Margin="0 10 0 5" 
                        Padding="0 5"
                        Grid.Row="9"    
                        Width="100" 
                        HorizontalAlignment="Center"
                        Click="AddAuthor">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=authorFirstname, Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=authorLastname, Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Border>
        </StackPanel>
    </Grid>
</Window>
